{"version":3,"file":"static/js/892.18b0efeb.chunk.js","mappings":"mPAEaA,EAAOC,EAAAA,GAAAA,KAAH,4EAEV,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACQ,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGJC,EAAOJ,EAAAA,GAAAA,MAAF,6CAEL,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,IAGDC,EAAQP,EAAAA,GAAAA,OAAF,oEACF,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,QAAQC,OAApB,IACL,SAAAR,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,I,SCTC,SAASI,EAAT,GAAwC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAEzC,GAA8CC,EAAAA,EAAAA,UAAS,IAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KAqBF,OACI,UAAChB,EAAD,CAAMiB,SAbiB,SAACC,GAGtB,GAFAA,EAAEC,iBAE6B,KAA3BJ,EAAgBK,OAChB,OAAOC,IAAAA,OAAAA,QAAwB,0CAGnCT,EAASG,EAEZ,EAIC,WACI,SAACV,EAAD,CACEiB,aAAa,MACbC,WAAS,EACTC,KAAK,SACLC,aAAcZ,EACda,KAAK,OAAOC,YAAY,8BAA8Bf,SA1BpC,SAACM,GAEvBF,EAAmBE,EAAEU,cAAcf,MAAMgB,cAC5C,KAyBK,SAACrB,EAAD,CAAQkB,KAAK,SAAb,qBAGT,C,8CCtCYI,GAAgB7B,EAAAA,EAAAA,IAAO8B,EAAAA,GAAP9B,CAAH,uRAGP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEP,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGH,SAAAF,GAAC,OAAIA,EAAEC,MAAM6B,OAAOC,IAAnB,IAGY,SAAA/B,GAAC,OAAIA,EAAEC,MAAM6B,OAAOE,OAAnB,IACZ,SAAAhC,GAAC,OAAIA,EAAEC,MAAM6B,OAAOG,KAAnB,IAKD,SAAAjC,GAAC,OAAIA,EAAEC,MAAM6B,OAAOE,OAAnB,ICZDE,EAAgB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtBC,GAAWC,EAAAA,EAAAA,MAIjB,OAEI,SAACC,EAAA,EAAD,CAAKC,GAAG,KAAMvC,EAAG,EAAjB,SACKmC,EAAeK,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OAChB,yBACI,SAACd,EAAD,CAAee,GAAE,UAAKD,GAAME,MAAO,CAACC,KAAMT,GAA1C,SAAwDK,KADnDC,EADO,KAM/B,E,SCuDD,EAlEe,WACX,OAAiC9B,EAAAA,EAAAA,UAAS,IAA1C,eAAOkC,EAAP,KAAiBC,EAAjB,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SACpC,GAA0BxC,EAAAA,EAAAA,UAAS,MAAnC,eAAOyC,EAAP,KAAcC,EAAd,KACA,GAA4B1C,EAAAA,EAAAA,WAAS,GAArC,eAAO2C,EAAP,KAAeC,EAAf,MAIAC,EAAAA,EAAAA,YAAU,WClBd,IAAuBC,EDqBI,KAAfP,GAAoC,OAAfA,IAIzBK,GAAU,ICzBKE,ED2BDP,ECzBVQ,MAAM,GAAD,OAAIC,EAAAA,GAAJ,gCAA+BC,EAAAA,GAA/B,kBAA4CH,IACpDI,MAAK,SAAAC,GACF,OAAIA,EAASC,GAEFD,EAASE,OAGbC,QAAQC,OACX,IAAIC,MAAJ,uDAA0DV,EAA1D,eAEP,KDgBII,MAAK,YAAkB,IAAfO,EAAc,EAAdA,QAEL,GAAuB,IAAnBA,EAAQC,OAKZ,OAHIvB,EAAY,IACZS,GAAU,GACVF,EAASc,OACNF,QAAQC,OAAO,IAAIC,MAAJ,6CAAgDjB,EAAhD,kBAEtBK,GAAU,GACVT,EAAYsB,GACZf,EAAS,KACZ,IACAiB,OAAM,SAAAlB,GACXC,EAASD,EACV,IAEF,GAAE,CAACF,IAeN,OACE,6BACM,SAAC1C,EAAD,CAAUC,SAZE,SAAAC,GAEd,GAAIA,IAAUwC,EACV,OAAOhC,IAAAA,OAAAA,QAAwB,wEAEnC+B,EAAyB,KAAVvC,EAAe,CAAC+C,MAAM/C,GAAS,CAAC,EAElD,EAKoCA,MAAOwC,IACrCI,IAAU,SAACiB,EAAA,EAAD,IACVnB,IAAS,2BAAMA,EAAMoB,QAAZ,OACX3B,IACD,SAACR,EAAA,EAAD,CAAKC,GAAG,KAAKvC,EAAG,EAAhB,UACK,SAACkC,EAAD,CAAeC,eAAgBW,QAM3C,C","sources":["components/SerchBox/SerchBox.styled.js","components/SerchBox/SerchBox.jsx","components/ListFindFilms/ListFind.styled.js","components/ListFindFilms/ListFindFilms.jsx","pages/Movies.jsx","utils/FechQueryFilm.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\ndisplay:flex;\ngap: ${p => p.theme.space[3]}px;\npadding-left: ${p => p.theme.space[4]}px;\n\n`\nexport const Input= styled.input`\n\nfont-size: ${p => p.theme.fontSizes.l};\n\n`\nexport const Button= styled.button`\nborder-radius: ${p => p.theme.borders.normals};\nfont-size: ${p => p.theme.fontSizes.l};\n\n\n\n`\n\n\n\n","import { useState } from \"react\";\nimport Notiflix from 'notiflix';\nimport { Form, Input, Button } from './SerchBox.styled';\nimport PropTypes from 'prop-types';\n\n\nexport default function SerchBox({ onChange, value }) {\n\n    const [searchInputFilm, setSearchInputFilm] = useState('');\n\n    const handleInputChange = (e) => {\n        // console.log(e.currentTarget.value);\n        setSearchInputFilm(e.currentTarget.value.toLowerCase());\n    }\n\n\n    \n    const handleNameChange = (e) => {\n        e.preventDefault();\n\n        if (searchInputFilm.trim() === '') {\n            return Notiflix.Notify.failure('Please input some name of Film to find');\n        }\n\n        onChange(searchInputFilm);\n        // console.log(e.currentTarget.elements.input.value);\n    }\n    \n   \n  return (\n      <Form onSubmit={handleNameChange}>\n          <Input\n            autoComplete=\"off\"\n            autoFocus\n            name='search'\n            defaultValue={value}\n            type=\"text\" placeholder='input name of film to serch' onChange={handleInputChange}>\n          </Input>\n          <Button type=\"submit\">Serch</Button>\n      </Form>\n  )\n}\n\nSerchBox.propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkFindFilms = styled(NavLink)`\n  display: flex;\n\n  margin-bottom: ${p => p.theme.space[2]}px;\n\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: 4px;\n\n  color: ${p => p.theme.colors.text};\n\n  &.active {\n    background-color: ${p => p.theme.colors.primary};\n    color: ${p => p.theme.colors.white};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${p => p.theme.colors.primary};\n  }\n\n`;","import { Box } from '../Box/Box';\nimport { useLocation } from 'react-router-dom';\nimport { LinkFindFilms } from './ListFind.styled';\n// import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n\n\nexport const ListFindFilms = ({ arrayFindFilms }) => {\n    const location = useLocation();\n    // console.log(arrayFindFilms);\n    // console.log(location);\n\n    return (\n\n        <Box as=\"ul\"  p={3} >\n            {arrayFindFilms.map(({ title, id }) =>\n                <li key={id}>\n                    <LinkFindFilms to={`${id}`} state={{from: location }} >{title}</LinkFindFilms>\n                </li>)}\n        </Box>\n    )\n}\n\nListFindFilms.propTypes = {\n    arrayFindFilms: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n    }))\n}","import SerchBox from \"components/SerchBox/SerchBox\"\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams} from \"react-router-dom\";\nimport { fechQueryFilm } from '../utils/FechQueryFilm';\nimport { Box } from '../components/Box/Box';\nimport { ListFindFilms } from '../components/ListFindFilms/ListFindFilms';\nimport { Loader } from '../components/Loader/Loader';\nimport Notiflix from 'notiflix';\n\n\n\nconst Movies = () => {\n    const [findFilm, setFindFilm ] = useState([]);\n    const [searchParams, setSerchParams] = useSearchParams();\n    const serchQuery = searchParams.get('query');\n    const [error, setError] = useState(null);\n    const [loader, setLoader] = useState(false);\n\n    // console.log(serchQuery);\n\n    useEffect(() => {\n        // console.log('works')\n\n        if (serchQuery === \"\" || serchQuery === null) {\n            return ;\n        }\n\n        setLoader(true);\n\n        fechQueryFilm(serchQuery)\n            .then(({ results }) => { \n                // console.log(results.length);\n                if (results.length === 0) {\n                    // console.log('works');\n                    setFindFilm([]);\n                    setLoader(false);\n                    setError(Error);\n                return Promise.reject(new Error(`Sorry, but we can't film with name ${serchQuery}. Try again.`))\n                }\n                setLoader(false);\n                setFindFilm(results);\n                setError(null);\n            })\n            .catch(error => {\n        setError(error);\n      })\n    \n    }, [serchQuery]);\n\n\n\n\n    const serchFilm = value => {\n\n        if (value === serchQuery) {\n            return Notiflix.Notify.failure('Enter new query for serch, result of this query you already can see ');\n        }\n        setSerchParams(value !== \"\" ? {query:value} : {})\n\n    }\n    \n\n  return (\n    <main>\n          <SerchBox onChange={serchFilm} value={serchQuery} />\n          {loader && <Loader></Loader>}\n          {error && <div>{error.message} </div>}\n        {findFilm &&\n        <Box as=\"ul\" p={4}>\n            {<ListFindFilms arrayFindFilms={findFilm}></ListFindFilms>}\n        </Box>      \n              \n          } \n    </main>\n  )\n}\n\nexport default Movies;","import { KEY, URL } from './FetchMovies';\n\nfunction fechQueryFilm(query) {\n    \n    return (fetch(`${URL}search/movie?api_key=${KEY}&query=${query}`)\n        .then(response => {\n            if (response.ok) {\n                // console.log(response);\n                return response.json();\n            }\n\n            return Promise.reject(\n                new Error(`Sorry, but we can't find any films with name ${query}. Try more`)\n            );\n        }))\n};\n\nexport { fechQueryFilm };\n    \n\n    \n    \n    \n"],"names":["Form","styled","p","theme","space","Input","fontSizes","l","Button","borders","normals","SerchBox","onChange","value","useState","searchInputFilm","setSearchInputFilm","onSubmit","e","preventDefault","trim","Notiflix","autoComplete","autoFocus","name","defaultValue","type","placeholder","currentTarget","toLowerCase","LinkFindFilms","NavLink","colors","text","primary","white","ListFindFilms","arrayFindFilms","location","useLocation","Box","as","map","title","id","to","state","from","findFilm","setFindFilm","useSearchParams","searchParams","setSerchParams","serchQuery","get","error","setError","loader","setLoader","useEffect","query","fetch","URL","KEY","then","response","ok","json","Promise","reject","Error","results","length","catch","Loader","message"],"sourceRoot":""}