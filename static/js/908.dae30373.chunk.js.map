{"version":3,"file":"static/js/908.dae30373.chunk.js","mappings":"8PAEaA,EAAW,mCAAG,WAAOC,GAAP,uFACIC,MAAM,GAAD,OAAIC,EAAAA,GAAJ,iBAAgBF,EAAhB,4BAAsCG,EAAAA,KAD/C,YACbC,EADa,QAENC,GAFM,yCAGRD,EAASE,QAHD,gCAKRC,QAAQC,OAAO,IAAIC,MAAJ,4EALP,2CAAH,sD,2BCAXC,EAAaC,EAAAA,GAAAA,EAAH,+DACN,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,IACJ,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,OAAnB,IAGFC,EAAcP,EAAAA,GAAAA,EAAH,sEACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,IACN,SAAAR,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,OAAnB,IAIFI,EAAcV,EAAAA,GAAAA,EAAH,kDACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UAAUQ,CAAtB,IAGLC,EAAcZ,EAAAA,GAAAA,GAAH,wEACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMW,MAAM,EAAlB,IACL,SAAAZ,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,I,SCqClB,EAhDgB,WACZ,OAA8BU,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAgBR,OAdAE,EAAAA,EAAAA,YAAU,WAEN/B,EAAYgC,OAAOH,IACdI,MAAK,SAAC5B,GACH6B,QAAQC,IAAI9B,EAAS+B,SAErBR,EAAWvB,EAEd,IACAgC,OAAM,SAAAC,GACH9B,QAAQC,OAAO,IAAIC,MAAJ,UAAa4B,EAAMC,UACrC,GACR,GAAC,CAACV,IAEEF,GAILO,QAAQC,IAAIR,IAMR,SAACa,EAAA,EAAD,CAAKC,GAAG,KAAK5B,EAAG,EAAhB,SACgC,IAA3Bc,EAAQS,QAAQM,OAEXf,EAAQS,QAAQO,KAAI,YAA8B,IAA3B1C,EAA0B,EAA1BA,GAAI2C,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAEjC,OACI,UAACrB,EAAD,YACI,UAACL,EAAD,sBAAsByB,MACtB,SAACtB,EAAD,UAAcuB,MAFA5C,EAKzB,KACC,SAACU,EAAD,iDArBH,IA0Bd,C,sBCrDD,SAASmC,EAAmBC,EAAKC,EAASvC,EAAQwC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOhB,GAEP,YADA7B,EAAO6B,EAET,CAEIe,EAAKE,KACPP,EAAQM,GAER9C,QAAQwC,QAAQM,GAAOrB,KAAKgB,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIrD,SAAQ,SAAUwC,EAASvC,GACpC,IAAIsC,EAAMU,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAMK,GACbR,EAAmBC,EAAKC,EAASvC,EAAQwC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOa,GACdjB,EAAmBC,EAAKC,EAASvC,EAAQwC,EAAOC,EAAQ,QAASa,EACnE,CAEAd,OAAMe,EACR,GACF,CACF,C","sources":["utils/FechReviews.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { KEY, URL } from './FetchMovies';\n\nexport const fechReviews = async (id) => {\n        const response = await fetch(`${URL}movie/${id}/reviews?api_key=${KEY}`)\n        if (response.ok) {\n            return response.json();\n            }\n            return Promise.reject(new Error(`Sorry, but we can't find reviews information about this film. Try more`))\n}\n","import styled from 'styled-components';\n\nexport const TitleError = styled.p`\n    font-size: ${p => p.theme.fontSizes.l};\n    color:  ${p => p.theme.colors.primary};\n`\n\nexport const TitleAuthor = styled.p`\n    font-weight: ${p => p.theme.fontWeights.bold};\n    color:  ${p => p.theme.colors.primary};\n   \n`\n\nexport const TextReviews = styled.p`\n    font-size: ${p => p.theme.fontSizes.m};\n   \n`\nexport const ItemReviews = styled.li`\n    margin-bottom: ${p => p.theme.space[4]}px;\n    font-size: ${p => p.theme.fontSizes.l};\n`\n\n\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fechReviews } from '../../utils/FechReviews';\nimport { Box } from '../Box/Box';\nimport {TitleError,TitleAuthor,TextReviews,ItemReviews} from './Reviews.styled'\n\n\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState(null);\n    const { renderId } = useParams();\n\n    useEffect(() => {\n\n        fechReviews(Number(renderId))\n            .then((response) => {\n                console.log(response.results);\n\n                setReviews(response);\n                \n            })\n            .catch(error => {\n                Promise.reject(new Error(`${error.message}`))\n            })\n    },[renderId]);\n\n    if (!reviews) {\n        return null\n    }\n\n    console.log(reviews);\n\n\n\n\n    return (\n        <Box as=\"ul\" p={4}>\n            {reviews.results.length !== 0\n                \n                ? reviews.results.map(({ id, author, content }) => {\n                    //  console.log(reviews);\n                    return (\n                        <ItemReviews key={id}>\n                            <TitleAuthor>Author: {author}</TitleAuthor>\n                            <TextReviews>{content}</TextReviews>\n                        </ItemReviews>\n                    )\n                })\n                : <TitleError> Sorry, we haven`t reviews yet!</TitleError>\n                }\n                \n        </Box>\n    )\n}\n\n\nexport default Reviews;\n\n// const Reviews = () => {\n\n//     const [reviews, setResponse] = useState(null)\n//     const { renderId } = useParams();\n    \n//     useEffect(() => {\n//         fechReviews(Number(renderId))\n//             .then(setResponse)\n//             .catch(error => {\n//                 Promise.reject(new Error(`${error.message}`))\n//             })\n//     }, [renderId]);\n\n//     if (!reviews) {\n//         return null\n//     }\n\n//     const { results } = reviews;\n\n//     return (<ul>\n//         {results.length !== 0\n//             ? results.map(({ id, author, content }) => {\n//                 return (\n//                     <ItemReviews key={id}>\n//                         <TitleAuthor>Author: {author}</TitleAuthor>\n//                         <TextReviews> { content}</TextReviews>\n//                     </ItemReviews>\n//                     )\n//                 })\n//             : <p>  Sorry, we haven`t reviews yet!</p>\n//         }\n//     </ul>)\n// }\n\n// export default Reviews;\n\n\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["fechReviews","id","fetch","URL","KEY","response","ok","json","Promise","reject","Error","TitleError","styled","p","theme","fontSizes","l","colors","primary","TitleAuthor","fontWeights","bold","TextReviews","m","ItemReviews","space","useState","reviews","setReviews","renderId","useParams","useEffect","Number","then","console","log","results","catch","error","message","Box","as","length","map","author","content","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}